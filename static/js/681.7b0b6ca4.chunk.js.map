{"version":3,"file":"static/js/681.7b0b6ca4.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Pagination/Pagination.jsx","components/SearchMovies/SearchMovies.styled.jsx","components/SearchMovies/SearchMovies.jsx","pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  width: calc((100% - 4 * 16px) / 5);\n  -webkit-box-shadow: 0px 0px 8px 1px rgba(204, 204, 204, 1);\n  -moz-box-shadow: 0px 0px 8px 1px rgba(204, 204, 204, 1);\n  box-shadow: 0px 0px 8px 1px rgba(204, 204, 204, 1);\n`;\n\nexport const Content = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n  padding: 12px 10px;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 330px;\n  object-fit: cover;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Content, Img, Item } from './MovieItem.styled';\nimport noPoster from '../../images/img-default.jpg';\nimport PropTypes from 'prop-types';\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w780';\n\nconst MovieItem = ({ id, title, poster_path, release_date }) => {\n  const location = useLocation();\n\n  const imgUrl = poster_path ? `${IMAGE_BASE_URL}/${poster_path}` : noPoster;\n\n  const releaseDate = release_date ? release_date.slice(0, 4) : 'N/A';\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <div>\n          <Img src={imgUrl} alt={title} width=\"300\" />\n        </div>\n\n        <Content>\n          {title ? title : 'No information'} ({releaseDate})\n        </Content>\n      </Link>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  poster_path: PropTypes.string,\n  release_date: PropTypes.string,\n};\n\nexport default MovieItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\n","import MovieItem from 'components/MovieItem/MovieItem';\nimport { List } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(movies => (\n        <MovieItem key={movies.id} {...movies} />\n      ))}\n    </List>\n  );\n};\n\nMovieList.ptopTypes = {\n  movies: PropTypes.array,\n};\n\nexport default MovieList;\n","import ReactPaginate from 'react-paginate';\nimport './Pagination.css';\n\nfunction PaginatedItems({ totalPages, setPage, currentPage }) {\n  const handlePageClick = event => {\n    setPage({ page: event.selected + 1 });\n  };\n\n  return (\n    <>\n      <ReactPaginate\n        nextLabel=\">\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={3}\n        marginPagesDisplayed={2}\n        pageCount={totalPages}\n        forcePage={currentPage}\n        previousLabel=\"<\"\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        breakLabel=\"...\"\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        containerClassName=\"pagination\"\n        activeClassName=\"active\"\n        renderOnZeroPageCount={null}\n      />\n    </>\n  );\n}\n\nexport default PaginatedItems;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  padding: 20px 0;\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  width: 400px;\n  font-size: 16px;\n  padding: 6px 80px 6px 6px;\n  outline: none;\n  border: 2px solid #ccc;\n  border-radius: 5px;\n  transition: border-color 200ms linear;\n\n  &:focus {\n    border-color: #006dba;\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  border: 2px solid #ccc;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  background-color: #fff;\n  color: #006dba;\n  font-size: 16px;\n  font-weight: 500;\n  text-transform: uppercase;\n  cursor: pointer;\n  transition: 200ms linear;\n\n  Form:focus-within & {\n    border-color: #006dba;\n  }\n\n  &:hover {\n    background-color: #006dba;\n    border-color: #006dba;\n    color: #fff;\n  }\n`;\n","import { Button, Form, Input, Wrapper } from './SearchMovies.styled';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchMovies = ({ onSubmit, value }) => {\n  const [query, setQuery] = useState(value);\n  return (\n    <Form onSubmit={onSubmit}>\n      <Wrapper>\n        <Input\n          type=\"text\"\n          name=\"query\"\n          onChange={e => setQuery(e.target.value)}\n          value={query}\n          placeholder=\"search movies...\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </Wrapper>\n    </Form>\n  );\n};\n\nSearchMovies.propTypes = {\n  onSubmit: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default SearchMovies;\n","import styled from 'styled-components';\n\nexport const NotFoundText = styled.p`\n  margin-top: 60px;\n  font-size: 18px;\n  font-weight: 500;\n  text-align: center;\n`;\n","import Container from 'components/Container/Container';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport SearchMovies from 'components/SearchMovies/SearchMovies';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport PaginatedItems from 'components/Pagination/Pagination';\n\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByKey } from 'services/api';\nimport { NotFoundText } from './MoviesPage.styled';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParam = searchParams.get('query') ?? '';\n  const pageParam = Number(searchParams.get('page') ?? 1);\n\n  useEffect(() => {\n    if (!queryParam) {\n      setMovies(null);\n      return;\n    }\n\n    setLoading(true);\n    getMovieByKey(queryParam, pageParam)\n      .then(res => {\n        if (res.results.length === 0) {\n          Notify.failure('Nothing is found. Wrong query.');\n        }\n        setMovies(res);\n      })\n      .finally(() => setLoading(false));\n  }, [pageParam, queryParam]);\n\n  function onSubmit(e) {\n    e.preventDefault();\n    const input = e.target.elements.query;\n    let { value } = input;\n\n    if (!value) {\n      Notify.warning('Enter the name of the movie, for a correct search!');\n      return;\n    }\n\n    setSearchParams({ query: value, page: 1 });\n  }\n\n  return (\n    <>\n      {loading && <Loader />}\n      <Container>\n        <SearchMovies onSubmit={onSubmit} value={queryParam} />\n        {movies &&\n          (movies?.results?.length === 0 ? (\n            <NotFoundText>Nothing found for your request</NotFoundText>\n          ) : (\n            <MovieList movies={movies.results} />\n          ))}\n\n        {movies && (\n          <PaginatedItems\n            setPage={page => setSearchParams({ query: queryParam, ...page })}\n            totalPages={movies.total_pages}\n            currentPage={pageParam - 1}\n          />\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["Item","styled","Content","Img","id","title","poster_path","release_date","location","useLocation","imgUrl","noPoster","releaseDate","slice","to","state","from","src","alt","width","List","MovieList","movies","map","ptopTypes","PropTypes","totalPages","setPage","currentPage","nextLabel","onPageChange","event","page","selected","pageRangeDisplayed","marginPagesDisplayed","pageCount","forcePage","previousLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","Form","Wrapper","Input","Button","onSubmit","value","useState","query","setQuery","type","name","onChange","e","target","placeholder","NotFoundText","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","queryParam","get","pageParam","Number","useEffect","getMovieByKey","then","res","results","length","Notify","finally","Loader","Container","preventDefault","elements","total_pages"],"sourceRoot":""}